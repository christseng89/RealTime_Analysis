apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: simple-addition-pipeline-
  annotations: {pipelines.kubeflow.org/kfp_sdk_version: 1.8.5, pipelines.kubeflow.org/pipeline_compilation_time: '2024-07-22T20:34:15.861435',
    pipelines.kubeflow.org/pipeline_spec: '{"description": "A simple pipeline that
      adds two numbers", "inputs": [{"name": "x", "type": "Integer"}, {"name": "y",
      "type": "Integer"}], "name": "Simple Addition Pipeline"}'}
  labels: {pipelines.kubeflow.org/kfp_sdk_version: 1.8.5}
spec:
  entrypoint: simple-addition-pipeline
  templates:
  - name: add
    container:
      args: []
      command:
      - python3
      - -c
      - |
        import argparse
        import os

        def add(a, b):
            result = a + b
            print(f"Adding {a} + {b} = {result}")
            with open("/tmp/output", "w") as f:
                f.write(str(result))

        if __name__ == "__main__":
            _parser = argparse.ArgumentParser(prog='Add', description='')
            _parser.add_argument("--a", dest="a", type=int, required=True)
            _parser.add_argument("--b", dest="b", type=int, required=True)
            _parser.add_argument("----output-paths", dest="_output_paths", type=str, nargs=1)
            _parsed_args = vars(_parser.parse_args())
            _output_files = _parsed_args.pop("_output_paths", [])

            _outputs = add(**_parsed_args)

            with open(_output_files[0], 'w') as f:
                f.write(str(_outputs))
      image: python:3.8
    inputs:
      artifacts:
      - {name: x, path: /tmp/inputs/a/data}
      - name: "y"
        path: /tmp/inputs/b/data
    outputs:
      artifacts:
      - {name: add-output, path: /tmp/output}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.8.5
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
      annotations: {pipelines.kubeflow.org/component_spec: '{"description": "Adds
          two integers", "implementation": {"container": {"command": ["python3", "-c",
          "import argparse\nimport os\n\ndef add(a, b):\n    result = a + b\n    print(f\"Adding
          {a} + {b} = {result}\")\n    with open(\"/tmp/output\", \"w\") as f:\n        f.write(str(result))\n\nif
          __name__ == \"__main__\":\n    _parser = argparse.ArgumentParser(prog=''Add'',
          description='''')\n    _parser.add_argument(\"--a\", dest=\"a\", type=int,
          required=True)\n    _parser.add_argument(\"--b\", dest=\"b\", type=int,
          required=True)\n    _parser.add_argument(\"----output-paths\", dest=\"_output_paths\",
          type=str, nargs=1)\n    _parsed_args = vars(_parser.parse_args())\n    _output_files
          = _parsed_args.pop(\"_output_paths\", [])\n\n    _outputs = add(**_parsed_args)\n\n    with
          open(_output_files[0], ''w'') as f:\n        f.write(str(_outputs))\n"],
          "fileOutputs": {"output": "/tmp/output"}, "image": "python:3.8"}}, "inputs":
          [{"name": "a", "type": "Integer"}, {"name": "b", "type": "Integer"}], "name":
          "Add", "outputs": [{"name": "output", "type": "Integer"}]}', pipelines.kubeflow.org/component_ref: '{"digest":
          "f60da73ebb19567150930ff94da45d3bd75c7e51d030045b65c148bdac4ef015"}'}
  - name: simple-addition-pipeline
    inputs:
      artifacts:
      - {name: x}
      - name: "y"
    dag:
      tasks:
      - name: add
        template: add
        arguments:
          artifacts:
          - {name: x, from: '{{inputs.artifacts.x}}'}
          - name: "y"
            from: '{{inputs.artifacts.y}}'
  arguments:
    parameters:
    - {name: x}
    - name: "y"
    artifacts:
    - name: x
      raw: {data: '{{workflow.parameters.x}}'}
    - name: "y"
      raw: {data: '{{workflow.parameters.y}}'}
  serviceAccountName: pipeline-runner
